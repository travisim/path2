// default map
myUI.runDefault = function(){
	let default_map = `type octile
	height 16
	width 16
	map
	................
	................
	..@@@@@@@@@@@@..
	..@.............
	..@.............
	..@..@@@@@@@@@..
	..@..@..........
	..@..@..........
	..@..@..@@@@@@..
	..@..@..@.......
	..@..@..@.......
	..@..@..@.......
	..@..@..@.......
	..@..@..@.......
	................
	................`;
  myUI.parseMap(default_map, `16x16_default.map`);
  
  /* first call */
  myUI.showPlanners();
  myUI.loadPlanner();

	let default_scen = `version 1\n0\t16x16_default.map\t16\t16\t0\t0\t13\t13\t-1`;
	myUI.parseScenario(default_scen);
  myUI.loadScenario();

  myUI.stateFreq = Number(myUI.sliders.state_freq_slider.elem.value);

  coll[1].click();
  coll[3].click();
  coll[4].click();

	let data = {coords:[[0,0],[10,8],[5,9],[8,15],[9,14],[10,14],[14,8],[12,11],[12,11],[13,5],[12,14],[15,11],[4,3],[14,12],[12,1],[8,2],[12,12],[13,14],[7,5],[13,16],[4,2],[5,12],[9,9],[14,14],[13,16],[16,8],[11,0],[14,1],[13,13]],neighbors:[[[4,2],[8,2],[11,0]],[[14,8]],[[5,12],[4,3]],[[9,14],[10,14],[12,14],[12,12],[13,14]],[[10,14],[8,15],[12,14],[12,12],[13,14],[13,13]],[[9,14],[12,14],[8,15],[12,12],[13,14],[13,13]],[[16,8],[15,11],[10,8]],[[12,11],[12,12],[14,12],[13,13],[12,14],[15,11]],[[12,11],[12,12],[14,12],[13,13],[12,14],[15,11]],[],[[13,14],[13,13],[10,14],[12,12],[14,14],[13,16]],[[14,12],[13,13],[12,11],[12,11],[14,8],[12,12]],[[7,5],[5,9]],[[15,11],[13,13],[12,12],[14,14],[12,11],[12,11]],[[11,0],[14,1],[8,2]],[[11,0],[4,2],[12,1]],[[12,11],[12,11],[13,13],[12,14],[14,12],[13,14]],[[12,14],[14,14],[13,13],[13,16],[13,16],[14,12]],[[4,3]],[[13,16],[13,14],[12,14],[14,14],[13,13],[10,14]],[[8,2],[0,0],[11,0]],[[5,9]],[[12,11],[12,11],[12,12]],[[13,14],[13,13],[12,14],[14,12],[13,16],[13,16]],[[13,16],[13,14],[12,14],[14,14],[13,13],[10,14]],[[14,8],[15,11],[14,12],[12,11],[12,11]],[[12,1],[14,1],[8,2],[4,2]],[[12,1],[11,0],[8,2],[14,8],[16,8]],[[13,14],[12,14],[14,12],[12,12],[14,14],[12,11]]],edges:[[[0,0],[4,2]],[[0,0],[8,2]],[[0,0],[11,0]],[[10,8],[14,8]],[[5,9],[5,12]],[[5,9],[4,3]],[[8,15],[9,14]],[[8,15],[10,14]],[[8,15],[12,14]],[[8,15],[12,12]],[[8,15],[13,14]],[[9,14],[10,14]],[[9,14],[12,14]],[[9,14],[12,12]],[[9,14],[13,14]],[[9,14],[13,13]],[[10,14],[12,14]],[[10,14],[12,12]],[[10,14],[13,14]],[[10,14],[13,13]],[[14,8],[16,8]],[[14,8],[15,11]],[[12,11],[12,11]],[[12,11],[12,12]],[[12,11],[14,12]],[[12,11],[13,13]],[[12,11],[15,11]],[[12,14],[13,14]],[[12,14],[13,13]],[[12,14],[12,12]],[[12,14],[14,14]],[[12,14],[13,16]],[[15,11],[14,12]],[[15,11],[13,13]],[[15,11],[12,12]],[[4,3],[7,5]],[[12,1],[11,0]],[[12,1],[14,1]],[[12,1],[8,2]],[[8,2],[11,0]],[[8,2],[4,2]],[[12,12],[13,13]],[[12,12],[13,14]],[[13,14],[14,14]],[[13,14],[13,13]],[[13,14],[13,16]],[[13,16],[13,16]],[[13,16],[14,14]],[[13,16],[13,13]],[[13,16],[10,14]],[[4,2],[11,0]],[[9,9],[12,11]],[[9,9],[12,12]],[[14,14],[13,13]],[[16,8],[15,11]],[[16,8],[14,12]],[[16,8],[12,11]],[[11,0],[14,1]],[[14,1],[8,2]],[[14,1],[14,8]],[[14,1],[16,8]]]};

	myUI.planner.randomCoordsNodes = [];
	for(const coord of data.coords){
		myUI.planner.randomCoordsNodes.push(new PRMNode(null, coord, []));
	}

	myUI.planner.randomCoordsNodes.forEach(node=>{
		myUI.SVGCanvas.drawCircle(node.value_XY,20,"grey")
	});

	for(let i = 0; i < myUI.planner.randomCoordsNodes.length; ++i){
		myUI.planner.randomCoordsNodes[i].neighbours.push(...data.neighbors[i]);
	}

	for (let i = 0; i < data.edges.length; ++i) {
		myUI.SVGCanvas.drawLine(data.edges[i][0],data.edges[i][1]);
	}

}
myUI.runDefault();