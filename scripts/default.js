// default map
myUI.runDefault = function(){
	let default_map = `type octile
	height 16
	width 16
	map
	................
	................
	..@@@@@@@@@@@@..
	..@.............
	..@.............
	..@..@@@@@@@@@..
	..@..@..........
	..@..@..........
	..@..@..@@@@@@..
	..@..@..@.......
	..@..@..@.......
	..@..@..@.......
	..@..@..@.......
	..@..@..@.......
	................
	................`;
  myUI.parseMap(default_map, `16x16_default.map`);

	let default_scen = `version 1\n0\t16x16_default.map\t16\t16\t0\t0\t13\t13\t-1`;
	myUI.parseScenario(default_scen);
  myUI.loadScenario();
  
  /* first call */
  myUI.showPlanners();
  myUI.loadPlanner();

  myUI.stateFreq = Number(myUI.sliders.state_freq_slider.elem.value);

  coll[1].click();
  coll[3].click();
  coll[4].click();

	let data = {"coords":[[0,0],[5,3],[4,8],[7,6],[10,9],[9,14],[15,0],[2,6],[3,14],[4,11],[15,4],[11,11],[9,13],[1,15],[6,1],[9,5],[4,3],[16,10],[11,3],[10,3],[5,9],[16,5],[5,5],[0,4],[14,14],[9,2],[13,13]],"neighbors":[[13,6,23],[15,21,2,16,19,22],[1,8,9,20,22],[],[11,5,12,17,24,26],[11,4,8,12,13,24,26],[0,17,24,14,10,21],[23],[2,5,9,13],[2,8,20],[6,17,18,16,21],[4,5,12,17,24,26],[5,11,4,24,26],[0,8,5],[6,25],[1,18,21,19,22],[10,1,21,22],[6,10,11,4,21,24,26],[10,15,19,21],[18,15,1,21],[2,9],[1,15,16,10,17,6,18,19],[16,1,2,15],[7,0],[6,11,17,5,12,4,26],[14],[24,11,12,5,17,4]],"edges":[[[0,0],[1,15]],[[0,0],[15,0]],[[5,3],[9,5]],[[5,3],[16,5]],[[5,3],[4,8]],[[4,8],[3,14]],[[10,9],[11,11]],[[9,14],[11,11]],[[9,14],[10,9]],[[9,14],[3,14]],[[15,0],[16,10]],[[15,0],[14,14]],[[15,0],[6,1]],[[4,11],[4,8]],[[4,11],[3,14]],[[15,4],[15,0]],[[15,4],[16,10]],[[15,4],[11,3]],[[15,4],[4,3]],[[9,13],[9,14]],[[9,13],[11,11]],[[9,13],[10,9]],[[1,15],[3,14]],[[1,15],[9,14]],[[9,5],[11,3]],[[9,5],[16,5]],[[4,3],[5,3]],[[4,3],[16,5]],[[4,3],[5,5]],[[16,10],[11,11]],[[16,10],[10,9]],[[10,3],[11,3]],[[10,3],[9,5]],[[10,3],[5,3]],[[5,9],[4,8]],[[5,9],[4,11]],[[16,5],[15,4]],[[16,5],[16,10]],[[16,5],[15,0]],[[16,5],[11,3]],[[16,5],[10,3]],[[5,5],[5,3]],[[5,5],[4,8]],[[5,5],[9,5]],[[0,4],[2,6]],[[0,4],[0,0]],[[14,14],[11,11]],[[14,14],[16,10]],[[14,14],[9,14]],[[14,14],[9,13]],[[14,14],[10,9]],[[9,2],[6,1]],[[13,13],[14,14]],[[13,13],[11,11]],[[13,13],[9,13]],[[13,13],[9,14]],[[13,13],[16,10]],[[13,13],[10,9]]]}

	myUI.planner.randomCoordsNodes = [];
	for(const coord of data.coords){
		myUI.planner.randomCoordsNodes.push(new PRMNode(null, coord, []));
	}

	myUI.planner.randomCoordsNodes.forEach(node=>{
		myUI.nodeCanvas.drawCircle(node.value_XY);
	});

	for(let i = 0; i < myUI.planner.randomCoordsNodes.length; ++i){
		myUI.planner.randomCoordsNodes[i].neighbours.push(...data.neighbors[i]);
	}

	for (let i = 0; i < data.edges.length; ++i) {
		myUI.edgeCanvas.drawLine(data.edges[i][0],data.edges[i][1]);
	}
}
myUI.runDefault();